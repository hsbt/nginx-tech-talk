# ex. `curl http://localhost:3000/?expires=1483110000&signature=BgUv73Idig2tdwo+WHFwxSdwlBI=&publickey=nginx`
worker_processes  1;
daemon off;
error_log /dev/stdout info;

events {}

http {
  access_log /dev/stdout;

  server {
    listen       3000;

    set $publickey "nginx";
    set $privatekey "mruby";

    location / {
      mruby_content_handler_code '
        arg_publickey = Nginx::Var.new.arg_publickey
        arg_signature = Nginx::Var.new.arg_signature
        arg_expires  = Nginx::Var.new.arg_expires

        expires = arg_expires.to_i

        publickey  = Nginx::Var.new.publickey
        privatekey = Nginx::Var.new.privatekey

        Nginx.return -> do
          if arg_publickey && arg_publickey.match(publickey) || !arg_expires
            return Nginx::HTTP_FORBIDDEN
          end

          plaintext = "#{Nginx::Var.new.request_method}#{Nginx::Var.new.uri}#{arg_expires}#{publickey}"
          hmac_sha1 = Digest::HMAC.digest(plaintext, privatekey, Digest::SHA1)
          signature = Base64::encode(hmac_sha1)

          if expires < Time.now.to_i
            return Nginx::HTTP_FORBIDDEN
          end

          if signature == arg_signature
            Nginx.echo "Sucess"
            return Nginx::HTTP_OK
          else
            return Nginx::HTTP_FORBIDDEN
          end
        end.call
      ';
    }
  }
}
